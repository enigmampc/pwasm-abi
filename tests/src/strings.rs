#![allow(dead_code)]

use pwasm_abi::eth::EndpointInterface;
use pwasm_abi_derive::eth_abi;


#[eth_abi(StringsEndpoint, StringsClient)]
pub trait StringsContract {
	fn string(&mut self, v: String);
}

const PAYLOAD_SAMPLE_1: &[u8] = &[
	0x3F, 0xCF, 0x74, 0xC6,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f,
	0x41, 0x73, 0x68, 0x20, 0x6e, 0x61, 0x7a, 0x67, 0x20, 0x74, 0x68, 0x72, 0x61, 0x6b, 0x61, 0x74,
	0x75, 0x6c, 0xc3, 0xbb, 0x6b, 0x20, 0x61, 0x67, 0x68, 0x20, 0x62, 0x75, 0x72, 0x7a, 0x75, 0x6d,
	0x2d, 0x69, 0x73, 0x68, 0x69, 0x20, 0x6b, 0x72, 0x69, 0x6d, 0x70, 0x61, 0x74, 0x75, 0x6c, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

#[test]
fn strings() {
	#[derive(Default)]
	pub struct Instance {
		pub s1: String,
	}

	impl StringsContract for Instance {
		fn string(&mut self, s: String) {
			self.s1 = s;
		}
	}

	let mut endpoint = StringsEndpoint::new(Instance::default());
	endpoint.dispatch(PAYLOAD_SAMPLE_1);

	let test_string = String::from("Ash nazg thrakatul√ªk agh burzum-ishi krimpatul");
	assert_eq!(endpoint.inner.s1, test_string);
}
